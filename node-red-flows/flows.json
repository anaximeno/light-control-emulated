[
    {
        "id": "fb24424d251e1865",
        "type": "tab",
        "label": "TimescaleDB Init",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "816842c9e9366ee7",
        "type": "tab",
        "label": "BE - Receive Messages",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "518596cfd0a97fb8",
        "type": "tab",
        "label": "UI - Show Light Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2f68038ac260a042",
        "type": "tab",
        "label": "UI - Show/Control Led State",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "795e30ec0b196f06",
        "type": "mqtt-broker",
        "name": "HiveMQ",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1921ada18576956b",
        "type": "mqtt-broker",
        "name": "EMQX",
        "broker": "broker.emqx.io",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "530c8d668caa86ee",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "blue-grey",
                "accents": "teal",
                "warn": "red",
                "background": "brown",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8b85d9117f7ce129",
        "type": "ui_tab",
        "name": "ESP32 - Light Controller",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b6eb07a0944c45ea",
        "type": "ui_group",
        "name": "Lumonisidade",
        "tab": "8b85d9117f7ce129",
        "order": 1,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "312f3f6c0ba11488",
        "type": "postgreSQLConfig",
        "name": "TimescaleDBConnection",
        "host": "r-timescaledb",
        "hostFieldType": "str",
        "port": 5432,
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": 10,
        "maxFieldType": "num",
        "idle": 1000,
        "idleFieldType": "num",
        "connectionTimeout": 10000,
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "password",
        "passwordFieldType": "str"
    },
    {
        "id": "352bb594371358b5",
        "type": "ui_group",
        "name": "LÃ¢mpadas LED",
        "tab": "8b85d9117f7ce129",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fb62e923391202f2",
        "type": "debug",
        "z": "fb24424d251e1865",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 180,
        "wires": []
    },
    {
        "id": "058d01d46566ac15",
        "type": "inject",
        "z": "fb24424d251e1865",
        "name": "Create hypertable",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "161d85e266a88fc4"
            ]
        ]
    },
    {
        "id": "161d85e266a88fc4",
        "type": "postgresql",
        "z": "fb24424d251e1865",
        "name": "",
        "query": "-- Create a standard PostgreSQL table\nCREATE TABLE wokwi_esp32_led_status (\n        time TIMESTAMPTZ NOT NULL,\n        color VARCHAR(32) NOT NULL,\n        status INT\n);\n\nCREATE TABLE wokwi_esp32_light_sensor_data (\n        time TIMESTAMPTZ NOT NULL,\n        lux FLOAT,\n        percent FLOAT\n);\n\n-- Convert the table into a hypertable for efficient time-series data management\nSELECT create_hypertable('wokwi_esp32_light_sensor_data', 'time');\nSELECT create_hypertable('wokwi_esp32_led_status', 'time');",
        "postgreSQLConfig": "312f3f6c0ba11488",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 650,
        "y": 180,
        "wires": [
            [
                "fb62e923391202f2"
            ]
        ]
    },
    {
        "id": "cf759ba20ce46a4a",
        "type": "mqtt in",
        "z": "816842c9e9366ee7",
        "name": "",
        "topic": "xa/wokwi/esp32/01/sensor/light",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1921ada18576956b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "21eb25cbf8aa0a02"
            ]
        ]
    },
    {
        "id": "ac40214b3a663a91",
        "type": "debug",
        "z": "816842c9e9366ee7",
        "name": "Sensor Light Data Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 120,
        "wires": []
    },
    {
        "id": "21eb25cbf8aa0a02",
        "type": "csv",
        "z": "816842c9e9366ee7",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "timestamp,lux,percent",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 710,
        "y": 200,
        "wires": [
            [
                "ac40214b3a663a91",
                "79a3c2d25f9efedf"
            ]
        ]
    },
    {
        "id": "79a3c2d25f9efedf",
        "type": "function",
        "z": "816842c9e9366ee7",
        "name": "Vectorize",
        "func": "const {lux, percent} = msg.payload;\nmsg.params = [lux, percent];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 280,
        "wires": [
            [
                "c2ce47fd247beda0"
            ]
        ]
    },
    {
        "id": "2564dd7ec2d7c315",
        "type": "mqtt in",
        "z": "816842c9e9366ee7",
        "name": "",
        "topic": "xa/wokwi/esp32/01/led/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1921ada18576956b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 480,
        "wires": [
            [
                "ab59a19dcf7c7dab"
            ]
        ]
    },
    {
        "id": "ab59a19dcf7c7dab",
        "type": "csv",
        "z": "816842c9e9366ee7",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "timestamp,color,status",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 710,
        "y": 480,
        "wires": [
            [
                "ea50f6bef7fdfcd2",
                "ff70c275fa378e6a"
            ]
        ]
    },
    {
        "id": "ea50f6bef7fdfcd2",
        "type": "debug",
        "z": "816842c9e9366ee7",
        "name": "Sensor LED Status Data Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 420,
        "wires": []
    },
    {
        "id": "ff70c275fa378e6a",
        "type": "function",
        "z": "816842c9e9366ee7",
        "name": "Vectorize",
        "func": "const {color, status} = msg.payload;\nmsg.params = [color, status];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 540,
        "wires": [
            [
                "792893f26af30ae9"
            ]
        ]
    },
    {
        "id": "c2ce47fd247beda0",
        "type": "postgresql",
        "z": "816842c9e9366ee7",
        "name": "Log Lux Data Into TSDB",
        "query": "-- Insert a new row into the sensor_data table\nINSERT INTO wokwi_esp32_light_sensor_data (time, lux, percent)\nVALUES (now(), $1, $2);",
        "postgreSQLConfig": "312f3f6c0ba11488",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "639309897e1bbb7b"
            ]
        ]
    },
    {
        "id": "792893f26af30ae9",
        "type": "postgresql",
        "z": "816842c9e9366ee7",
        "name": "Log Lux Data Into TSDB",
        "query": "-- Insert a new row into the sensor_data table\nINSERT INTO wokwi_esp32_led_status (time, color, status)\nVALUES (now(), $1, $2);",
        "postgreSQLConfig": "312f3f6c0ba11488",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "b240cb9d85139ef7"
            ]
        ]
    },
    {
        "id": "ffabf4dcc5a9644c",
        "type": "link out",
        "z": "816842c9e9366ee7",
        "name": "led-status-trigger-link-out",
        "mode": "link",
        "links": [
            "8ae0df24a37dea0b"
        ],
        "x": 1755,
        "y": 540,
        "wires": []
    },
    {
        "id": "9b9c11377b4bc9af",
        "type": "delay",
        "z": "816842c9e9366ee7",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 540,
        "wires": [
            [
                "ffabf4dcc5a9644c"
            ]
        ]
    },
    {
        "id": "b240cb9d85139ef7",
        "type": "change",
        "z": "816842c9e9366ee7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "params",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 540,
        "wires": [
            [
                "9b9c11377b4bc9af"
            ]
        ]
    },
    {
        "id": "56e5088c36f8691c",
        "type": "link out",
        "z": "816842c9e9366ee7",
        "name": "light-data-trigger-link-out",
        "mode": "link",
        "links": [
            "09fc4ebefde048d6"
        ],
        "x": 1765,
        "y": 280,
        "wires": []
    },
    {
        "id": "4d32a11f633514b4",
        "type": "delay",
        "z": "816842c9e9366ee7",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1630,
        "y": 280,
        "wires": [
            [
                "56e5088c36f8691c"
            ]
        ]
    },
    {
        "id": "639309897e1bbb7b",
        "type": "change",
        "z": "816842c9e9366ee7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "params",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 280,
        "wires": [
            [
                "4d32a11f633514b4"
            ]
        ]
    },
    {
        "id": "8a9004ed4d71c712",
        "type": "debug",
        "z": "518596cfd0a97fb8",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 340,
        "wires": []
    },
    {
        "id": "e2b58d0f2046b229",
        "type": "function",
        "z": "518596cfd0a97fb8",
        "name": "Get Last Percent",
        "func": "let value = 0;\nif (msg.payload.length > 0) {\n    const { time, lux, percent } = msg.payload[0];\n    value = percent;\n}\nmsg.payload = value;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 460,
        "wires": [
            [
                "1086bee21514c7f9"
            ]
        ]
    },
    {
        "id": "1086bee21514c7f9",
        "type": "range",
        "z": "518596cfd0a97fb8",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1420,
        "y": 460,
        "wires": [
            [
                "6e3eb3eb7650da72"
            ]
        ]
    },
    {
        "id": "6e3eb3eb7650da72",
        "type": "ui_gauge",
        "z": "518596cfd0a97fb8",
        "name": "",
        "group": "b6eb07a0944c45ea",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Atual",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 460,
        "wires": []
    },
    {
        "id": "3ca94abbcf6efeaa",
        "type": "postgresql",
        "z": "518596cfd0a97fb8",
        "name": "Select Light Data in the Last Hour",
        "query": "select * from wokwi_esp32_light_sensor_data welsd where \"time\" > now() - interval '1 hours' order by time desc;",
        "postgreSQLConfig": "312f3f6c0ba11488",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 920,
        "y": 340,
        "wires": [
            [
                "8a9004ed4d71c712",
                "e2b58d0f2046b229",
                "dca61b5d2437ab3c"
            ]
        ]
    },
    {
        "id": "49cc244c845f9ed1",
        "type": "ui_chart",
        "z": "518596cfd0a97fb8",
        "name": "",
        "group": "b6eb07a0944c45ea",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Ãltima Hora",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Sem Dados",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1490,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "dca61b5d2437ab3c",
        "type": "function",
        "z": "518596cfd0a97fb8",
        "name": "Convert Data for Chart",
        "func": "const data = msg.payload;\n\nconst chartInfo = [{\n    series: [\"A\"],\n    data: [[]],\n    labels: [\"Percentage\"]\n}];\n\nfor (let item of data) {\n    // chartInfo[0].data[0].push({\n    //     x: item.time,\n    //     y: item.lux,\n    // });\n    chartInfo[0].data[0].push({\n        x: item.time,\n        y: item.percent,\n    });\n}\n\nmsg.payload = chartInfo;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "b81431bfb557a8fe",
                "49cc244c845f9ed1"
            ]
        ]
    },
    {
        "id": "b81431bfb557a8fe",
        "type": "debug",
        "z": "518596cfd0a97fb8",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 160,
        "wires": []
    },
    {
        "id": "9e7216ad56521ffd",
        "type": "trigger",
        "z": "518596cfd0a97fb8",
        "name": "5 Seconds Trigger",
        "op1": "1",
        "op2": "1",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "3ca94abbcf6efeaa"
            ]
        ]
    },
    {
        "id": "09fc4ebefde048d6",
        "type": "link in",
        "z": "518596cfd0a97fb8",
        "name": "light-data-update-trigger-link-in",
        "links": [
            "56e5088c36f8691c"
        ],
        "x": 385,
        "y": 460,
        "wires": [
            [
                "9e7216ad56521ffd",
                "61544212f12feeb4"
            ]
        ]
    },
    {
        "id": "3ef826bd16e03c77",
        "type": "inject",
        "z": "518596cfd0a97fb8",
        "name": "Start Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "9e7216ad56521ffd"
            ]
        ]
    },
    {
        "id": "0a2ed1a4d8e83196",
        "type": "inject",
        "z": "518596cfd0a97fb8",
        "name": "Stop Trigger",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 380,
        "wires": [
            [
                "9e7216ad56521ffd"
            ]
        ]
    },
    {
        "id": "61544212f12feeb4",
        "type": "debug",
        "z": "518596cfd0a97fb8",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 460,
        "wires": []
    },
    {
        "id": "1920b3536512afa0",
        "type": "postgresql",
        "z": "2f68038ac260a042",
        "name": "Select Led Status Data in the Last Hour",
        "query": "select * from wokwi_esp32_led_status wels where \"time\" > now() - interval '1 hours' order by time desc;",
        "postgreSQLConfig": "312f3f6c0ba11488",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 940,
        "y": 380,
        "wires": [
            [
                "d6b8f367a69c2534",
                "123545306d56e4be",
                "842e32c3f48141cf"
            ]
        ]
    },
    {
        "id": "d6b8f367a69c2534",
        "type": "debug",
        "z": "2f68038ac260a042",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 380,
        "wires": []
    },
    {
        "id": "5bdf20c35e849a70",
        "type": "ui_switch",
        "z": "2f68038ac260a042",
        "name": "",
        "label": "LED Azul",
        "tooltip": "",
        "group": "352bb594371358b5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "blue",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "radio_button_checked",
        "oncolor": "blue",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "radio_button_unchecked",
        "offcolor": "gray",
        "animate": true,
        "className": "",
        "x": 1540,
        "y": 440,
        "wires": [
            [
                "5f89df61ae25fc31",
                "7abcc62c145ae095"
            ]
        ]
    },
    {
        "id": "21f8cca331620121",
        "type": "ui_switch",
        "z": "2f68038ac260a042",
        "name": "",
        "label": "LED Vermelho",
        "tooltip": "",
        "group": "352bb594371358b5",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "red",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "radio_button_checked",
        "oncolor": "red",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "radio_button_unchecked",
        "offcolor": "gray",
        "animate": true,
        "className": "",
        "x": 1560,
        "y": 500,
        "wires": [
            [
                "5f89df61ae25fc31",
                "7abcc62c145ae095"
            ]
        ]
    },
    {
        "id": "2ff029b97b1f75bc",
        "type": "ui_switch",
        "z": "2f68038ac260a042",
        "name": "",
        "label": "LED Verde",
        "tooltip": "",
        "group": "352bb594371358b5",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "green",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "radio_button_checked",
        "oncolor": "green",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "radio_button_unchecked",
        "offcolor": "gray",
        "animate": false,
        "className": "",
        "x": 1550,
        "y": 560,
        "wires": [
            [
                "5f89df61ae25fc31",
                "7abcc62c145ae095"
            ]
        ]
    },
    {
        "id": "5f89df61ae25fc31",
        "type": "function",
        "z": "2f68038ac260a042",
        "name": "Map Switch Trigger to Appropiate Topic",
        "func": "msg.topic = \"xa/wokwi/esp32/01/led/\" + msg.topic + \"/switch\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 500,
        "wires": [
            [
                "43bcde2e351bfcc8",
                "191240c70a696704"
            ]
        ]
    },
    {
        "id": "43bcde2e351bfcc8",
        "type": "debug",
        "z": "2f68038ac260a042",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 400,
        "wires": []
    },
    {
        "id": "191240c70a696704",
        "type": "mqtt out",
        "z": "2f68038ac260a042",
        "name": "MQTT xa/wokwi/esp32",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1921ada18576956b",
        "x": 2180,
        "y": 500,
        "wires": []
    },
    {
        "id": "123545306d56e4be",
        "type": "function",
        "z": "2f68038ac260a042",
        "name": "Map Current LED States",
        "func": "const lastRedLEDData = msg.payload.find(item => item.color == \"red\");\nconst lastGreenLEDData = msg.payload.find(item => item.color == \"green\");\nconst lastBlueLEDData = msg.payload.find(item => item.color == \"blue\");\n\n// OUT ORDER: BLUE, RED; GREEN\nconst msgs = [\n    {payload: lastBlueLEDData.status},\n    {payload: lastRedLEDData.status},\n    {payload: lastGreenLEDData.status},\n]\n\nreturn msgs;",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 500,
        "wires": [
            [
                "5bdf20c35e849a70"
            ],
            [
                "21f8cca331620121"
            ],
            [
                "2ff029b97b1f75bc"
            ]
        ]
    },
    {
        "id": "7abcc62c145ae095",
        "type": "switch",
        "z": "2f68038ac260a042",
        "name": "Feedback",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blue",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "red",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "green",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1540,
        "y": 280,
        "wires": [
            [
                "5bdf20c35e849a70"
            ],
            [
                "21f8cca331620121"
            ],
            [
                "2ff029b97b1f75bc"
            ]
        ]
    },
    {
        "id": "842e32c3f48141cf",
        "type": "function",
        "z": "2f68038ac260a042",
        "name": "Prepare Data",
        "func": "const data = msg.payload;\n\nconst getCurrentLedSinceCurrentStatus = (color) => {\n    let currentStatus = data.find(item => item.color == color);\n\n    let sinceLastStatus = currentStatus;\n\n    for (let item of data) {\n        if (item.color == color) {\n            if (item.status == sinceLastStatus.status) {\n                sinceLastStatus = item;\n            } else break;\n        } \n    }\n\n    const date = new Date(sinceLastStatus.time);\n    return {\n        currentStatus: currentStatus.status == 1 ? \"Ligado\" : \"Apagado\",\n        sinceStatus: date.toLocaleDateString('pt') + ' Ã s ' + date.toLocaleTimeString('pt'),\n    };\n}\n\nconst blueSinceStatus = getCurrentLedSinceCurrentStatus(\"blue\");\nconst redSinceStatus = getCurrentLedSinceCurrentStatus(\"red\");\nconst greenSinceStatus = getCurrentLedSinceCurrentStatus(\"green\");\n\nmsg.payload = {\n    vermelha: {\n        estado: redSinceStatus.currentStatus,\n        horas: redSinceStatus.sinceStatus,\n    },\n    azul: {\n        estado: blueSinceStatus.currentStatus,\n        horas: blueSinceStatus.sinceStatus,\n    },\n    verde: {\n        estado: greenSinceStatus.currentStatus,\n        horas: greenSinceStatus.sinceStatus,\n    },\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 720,
        "wires": [
            [
                "b7065df03524d42d",
                "c519749f91fb16ce"
            ]
        ]
    },
    {
        "id": "b7065df03524d42d",
        "type": "debug",
        "z": "2f68038ac260a042",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 840,
        "wires": []
    },
    {
        "id": "c519749f91fb16ce",
        "type": "ui_template",
        "z": "2f68038ac260a042",
        "group": "352bb594371358b5",
        "name": "Report LED Status",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n  #header {\n    text-align: center;\n  }\n\n  li {\n    padding-top: 10px;\n  }\n\n  #report-section {\n    margin-left: 5px;\n  }\n\n  #report-section div {\n    padding-top: 10px;\n  }\n\n  #lampadaVermelha .lname {\n    color: red;\n  }\n\n  #lampadaAzul .lname {\n    color: blue;\n  }\n\n  #lampadaVerde .lname {\n    color: green;\n  }\n</style>\n\n<div>\n  <h4 id=\"header\">RelatÃ³rio das LEDs</h4>\n  <div id=\"report-section\">\n    <div id=\"lampadaVermelha\">\n      <div class=\"lname\">LED VERMELHO</div>\n      <div>\n        =>\n        <b><span data-node-value=\"vermelha_estado\">apagado</span></b> desde\n        <b><span data-node-value=\"vermelha_horas\">--:--</span></b>\n      </div>\n    </div>\n    <div id=\"lampadaAzul\">\n      <div class=\"lname\">LED AZUL</div>\n      <div>\n        =>\n        <b><span data-node-value=\"azul_estado\">apagado</span></b> desde\n        <b><span data-node-value=\"azul_horas\">--:--</span></b>\n      </div>\n    </div>\n    <div id=\"lampadaVerde\">\n      <div class=\"lname\">LED VERDE</div>\n      <div>\n        =>\n        <b><span data-node-value=\"verde_estado\">apagado</span></b> desde\n        <b><span data-node-value=\"verde_horas\">--:--</span></b>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  (function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg) {\n        // LÃ¢mpada Vermelha\n        if (msg.payload.vermelha) {\n          $(\"#lampadaVermelha span[data-node-value='vermelha_estado']\").text(msg.payload.vermelha.estado || \"apagado\");\n          $(\"#lampadaVermelha span[data-node-value='vermelha_horas']\").text(msg.payload.vermelha.horas || \"--:--\");\n        }\n\n        // LÃ¢mpada Azul\n        if (msg.payload.azul) {\n          $(\"#lampadaAzul span[data-node-value='azul_estado']\").text(msg.payload.azul.estado || \"apagado\");\n          $(\"#lampadaAzul span[data-node-value='azul_horas']\").text(msg.payload.azul.horas || \"--:--\");\n        }\n\n        // LÃ¢mpada Verde\n        if (msg.payload.verde) {\n          $(\"#lampadaVerde span[data-node-value='verde_estado']\").text(msg.payload.verde.estado || \"apagado\");\n          $(\"#lampadaVerde span[data-node-value='verde_horas']\").text(msg.payload.verde.horas || \"--:--\");\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1570,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "5bf3f5e32a3606df",
        "type": "trigger",
        "z": "2f68038ac260a042",
        "name": "5 Seconds Trigger",
        "op1": "1",
        "op2": "1",
        "op1type": "str",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 380,
        "wires": [
            [
                "1920b3536512afa0"
            ]
        ]
    },
    {
        "id": "8ae0df24a37dea0b",
        "type": "link in",
        "z": "2f68038ac260a042",
        "name": "led-status-trigger-link-in",
        "links": [
            "ffabf4dcc5a9644c"
        ],
        "x": 385,
        "y": 500,
        "wires": [
            [
                "5bf3f5e32a3606df",
                "281c861910e46798"
            ]
        ]
    },
    {
        "id": "ce5efcdd51d53aa0",
        "type": "inject",
        "z": "2f68038ac260a042",
        "name": "Start Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "5bf3f5e32a3606df"
            ]
        ]
    },
    {
        "id": "5198cab4f311a170",
        "type": "inject",
        "z": "2f68038ac260a042",
        "name": "Stop Trigger",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "5bf3f5e32a3606df"
            ]
        ]
    },
    {
        "id": "281c861910e46798",
        "type": "debug",
        "z": "2f68038ac260a042",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 500,
        "wires": []
    }
]